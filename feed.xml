<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-01-15T12:25:30-05:00</updated><id>http://localhost:4000/</id><title type="html">Phil Hawkins</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Fix ASP.NET Assets in Appimages</title><link href="http://localhost:4000/blog/linux/2017/09/14/aspnet-appimage.html" rel="alternate" type="text/html" title="Fix ASP.NET Assets in Appimages" /><published>2017-09-14T13:52:48-04:00</published><updated>2017-09-14T13:52:48-04:00</updated><id>http://localhost:4000/blog/linux/2017/09/14/aspnet-appimage</id><content type="html" xml:base="http://localhost:4000/blog/linux/2017/09/14/aspnet-appimage.html">&lt;p&gt;Bundling your .NET Core applications into AppImages simplifies the distribution of your software on Linux. Ever since Microsoft released version 2.0 of .NET Core, this has become even easier with the introduction of the generic &lt;code class=&quot;highlighter-rouge&quot;&gt;linux-x64&lt;/code&gt; &lt;a href=&quot;https://github.com/dotnet/docs/blob/master/docs/core/rid-catalog.md#linux-rids&quot;&gt;Runtime IDentifier&lt;/a&gt; (RID). This RID replaces the distro-specific RIDs (&lt;code class=&quot;highlighter-rouge&quot;&gt;ubuntu-16.04-x64&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;fedora.24-x64&lt;/code&gt;, etc) of previous versions of .NET Core.&lt;/p&gt;

&lt;h3 id=&quot;shameless-plug-netpkg-tool&quot;&gt;Shameless Plug: netpkg-tool&lt;/h3&gt;

&lt;p&gt;If you wish to simplify/automate the process of &lt;a href=&quot;https://github.com/AppImage/AppImageKit/wiki/Bundling-.NET-Core-apps&quot;&gt;bundling .NET Core apps into AppImages&lt;/a&gt;, you can use &lt;em&gt;netpkg-tool&lt;/em&gt;! Just follow the simple instructions for &lt;a href=&quot;https://github.com/phil-harmoniq/netpkg-tool#released-binary&quot;&gt;downloading netpkg-tool&lt;/a&gt;, and then package your application like so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;netpkg-tool ~/path/to/source ~/path/to/destination&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;preparing-project&quot;&gt;Preparing Project&lt;/h3&gt;

&lt;p&gt;When generating a new ASP.NET project, you are presented with the following &lt;code class=&quot;highlighter-rouge&quot;&gt;Program&lt;/code&gt; class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;BuildWebHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IWebHost&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BuildWebHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WebHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CreateDefaultBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UseStartup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;By default, ASP.NET looks for &lt;code class=&quot;highlighter-rouge&quot;&gt;wwwroot&lt;/code&gt; in the current working directory. This works well up until you try to run your webapp from a different working directory (aka inside an AppImage). A work-around would be to detect if the application is being run from an AppImage and set its content root accordingly. If you are using &lt;em&gt;netpkg-tool&lt;/em&gt; to build your AppImage, an environment variable is provided for this purpose. Simply check for the existance of &lt;code class=&quot;highlighter-rouge&quot;&gt;$NET_PKG&lt;/code&gt; and set the content root to the assemblyâ€™s directory if it is detected:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetExecutingAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEnvironmentVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NET_PKG&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;BuildWebHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetCurrentDirectory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;BuildWebHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IWebHost&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;BuildWebHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WebHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CreateDefaultBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseContentRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UseStartup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">Bundling your .NET Core applications into AppImages simplifies the distribution of your software on Linux. Ever since Microsoft released version 2.0 of .NET Core, this has become even easier with the introduction of the generic linux-x64 Runtime IDentifier (RID). This RID replaces the distro-specific RIDs (ubuntu-16.04-x64, fedora.24-x64, etc) of previous versions of .NET Core.</summary></entry><entry><title type="html">Developing on Linux with VS Code</title><link href="http://localhost:4000/blog/linux/2017/09/14/linux-dev-with-vscode.html" rel="alternate" type="text/html" title="Developing on Linux with VS Code" /><published>2017-09-14T13:12:31-04:00</published><updated>2017-09-14T13:12:31-04:00</updated><id>http://localhost:4000/blog/linux/2017/09/14/linux-dev-with-vscode</id><content type="html" xml:base="http://localhost:4000/blog/linux/2017/09/14/linux-dev-with-vscode.html">&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt; is a very capable and extensible editor text editor developed by Microsoft based off of Githubâ€™s &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; editor. For the past year, it has been my editor of choice for nearly any project/language. The plugin ecosystem contains essential tools one would need for almost any type of development.&lt;/p&gt;

&lt;h3 id=&quot;integrated-terminal&quot;&gt;Integrated Terminal&lt;/h3&gt;

&lt;p&gt;One of my favorite features of VS Code is its integrated terminal which can be opened with &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+`&lt;/code&gt;. You can select which shell you would like the terminal to default to in your User Settings using the &lt;code class=&quot;highlighter-rouge&quot;&gt;terminal.integrated.shell.linux&lt;/code&gt; attribute. By default, the terminal will default to Bash on Linux and macOS or Powershell on Windows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/integrated-terminal-example.png&quot; alt=&quot;Terminal Example&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;cnet-core&quot;&gt;C#/.NET Core&lt;/h3&gt;

&lt;p&gt;If you want to develop for .NET Core in Linux, VS Code offers perhaps the best experience. Full debugging and intellisense are provided by Omnisharp by installing the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp&quot;&gt;C# plugin&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;performance&quot;&gt;Performance&lt;/h3&gt;

&lt;p&gt;One of the common complaints against Atom is its slow load time and itâ€™s difficulty with large files. Being based on Atom, youâ€™d think that VS Code would suffer from the same sluggish behaviour, but I havenâ€™t found that to be the case. VS Code starts in under a second on my machine, which is something that.&lt;/p&gt;</content><author><name></name></author><summary type="html">VS Code is a very capable and extensible editor text editor developed by Microsoft based off of Githubâ€™s Atom editor. For the past year, it has been my editor of choice for nearly any project/language. The plugin ecosystem contains essential tools one would need for almost any type of development.</summary></entry></feed>